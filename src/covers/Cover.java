package covers;

/*
 * В Java все стандартные типы могут быть уложены в оболочки. Оболочки созданы потому,
 * что некоторые синтаксичекие конструкции в Java работают только с объектами, а как передавать
 * стандартный тип, если это не объект? Стандартные типы упаковываются в оболочки. Процедура извлечения
 * из оболочки значения называется распаковкой.
 * 
 * Во многих моментах упаковка и распаковка происходит автоматически.
 */

public class Cover {

	public static void main(String[] args)
	{
		/*
		 * Все оболочки стандартных типов имеют одноименные с ними имена, но начинаются
		 * с заглавной буквы.
		 * 
		 * Числовые значения, кроме прочего, имеют общую оболочку Number. Благодаря общей
		 * оболочке, целые и вещественные числа можно хранить в одном объекте, возвращая
		 * разное представление через нужный метод.
		 */
		
		Number num = new Double(3.1415);
		
		System.out.println(num);    // в данном случае произойдет автораспаковка, перед тем как вывести число
		System.out.println(num.intValue());	// мы распаковываем вручную 
		
		/* Автоупаковка и автораспаковка происходит в арифметических выражениях. Правила приведения типов при
		 * этом сохраняются.
		 */
		
		Double num1 = num.doubleValue();
		double i = num1 / 3;
		
		System.out.println(i);
		
		/*
		 * Оболочки следует использовать осторожно, так как операции упаковки и распаковки
		 * затрачивает некоторое машинное время. Не следует использовать оболочки в операциях,
		 * где требуется скорость.
		 */
		
	}
	
}
